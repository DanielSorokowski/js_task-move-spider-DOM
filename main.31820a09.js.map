{"version":3,"sources":["scripts/main.js"],"names":["wallElement","document","querySelector","spiderElement","addEventListener","clickEvent","target","classList","contains","game","coords","x","clientX","getBoundingClientRect","clientTop","y","clientY","clientLeft","spider","width","offsetWidth","height","offsetHeight","wall","style","transform"],"mappings":";AAAA,aAEA,IAAMA,EAAcC,SAASC,cAAc,SACrCC,EAAgBF,SAASC,cAAc,WAE7CF,EAAYI,iBAAiB,QAAS,SAAAC,GAChCA,IAAAA,EAAWC,OAAOC,UAAUC,SAAS,UAArCH,CAIEI,IAAAA,EAAO,CACXC,OAAQ,CACNC,EAAGN,EAAWO,QACVP,EAAWC,OAAOO,wBAAwBF,EAC1CN,EAAWC,OAAOQ,UACtBC,EAAGV,EAAWW,QACVX,EAAWC,OAAOO,wBAAwBE,EAC1CV,EAAWC,OAAOW,YAExBC,OAAQ,CACNC,MAAOhB,EAAciB,YACrBC,OAAQlB,EAAcmB,cAExBC,KAAM,CACJJ,MAAOnB,EAAYoB,YAA6C,EAA/Bf,EAAWC,OAAOW,WACnDI,OAAQrB,EAAYsB,aAA6C,EAA9BjB,EAAWC,OAAOQ,YAIjDJ,EAAyBD,EAAzBC,OAAQQ,EAAiBT,EAAjBS,OAAQK,EAASd,EAATc,KAEpBb,EAAOC,GAAKO,EAAOC,MAAQ,EAC7BT,EAAOC,EAAI,EACFD,EAAOC,EAAIY,EAAKJ,MAAQD,EAAOC,MAAQ,EAChDT,EAAOC,EAAIY,EAAKJ,MAAQD,EAAOC,MAE/BT,EAAOC,EAAID,EAAOC,EAAIO,EAAOC,MAAQ,EAGnCT,EAAOK,GAAKG,EAAOG,OAAS,EAC9BX,EAAOK,EAAI,EACFL,EAAOK,EAAIQ,EAAKF,OAASH,EAAOG,OAAS,EAClDX,EAAOK,EAAIQ,EAAKF,OAASH,EAAOG,OAEhCX,EAAOK,EAAIL,EAAOK,EAAIG,EAAOG,OAAS,EAGxClB,EAAcqB,MAAMC,UAAyBf,aAAAA,OAAAA,EAAOC,EAAQD,QAAAA,OAAAA,EAAOK,EAAnE","file":"main.31820a09.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst wallElement = document.querySelector('.wall');\nconst spiderElement = document.querySelector('.spider');\n\nwallElement.addEventListener('click', clickEvent => {\n  if (clickEvent.target.classList.contains('spider')) {\n    return;\n  }\n\n  const game = {\n    coords: {\n      x: clickEvent.clientX\n        - clickEvent.target.getBoundingClientRect().x\n        - clickEvent.target.clientTop,\n      y: clickEvent.clientY\n        - clickEvent.target.getBoundingClientRect().y\n        - clickEvent.target.clientLeft,\n    },\n    spider: {\n      width: spiderElement.offsetWidth,\n      height: spiderElement.offsetHeight,\n    },\n    wall: {\n      width: wallElement.offsetWidth - clickEvent.target.clientLeft * 2,\n      height: wallElement.offsetHeight - clickEvent.target.clientTop * 2,\n    },\n  };\n\n  const { coords, spider, wall } = game;\n\n  if (coords.x <= spider.width / 2) {\n    coords.x = 0;\n  } else if (coords.x > wall.width - spider.width / 2) {\n    coords.x = wall.width - spider.width;\n  } else {\n    coords.x = coords.x - spider.width / 2;\n  }\n\n  if (coords.y <= spider.height / 2) {\n    coords.y = 0;\n  } else if (coords.y > wall.height - spider.height / 2) {\n    coords.y = wall.height - spider.height;\n  } else {\n    coords.y = coords.y - spider.height / 2;\n  }\n\n  spiderElement.style.transform = `translate(${coords.x}px, ${coords.y}px)`;\n});\n"]}